-
  var part_mix_controls = [
    { name: "part_volume", label: "Volume" },
    { name: "part_pan", label: "Pan" },
    { name: "part_expression", label: "Expression" },
  ]

  var part_tone_controls = [
    { name: "part_attack", label: "Attack" },
    { name: "part_release", label: "Release" },
    { name: "part_harmonics", label: "Harmonics" },
    { name: "part_brightness", label: "Brightness" },
  ]

  var part_fx_controls = [
    { name: "part_reverb", label: "Reverb Depth" },
    { name: "part_chorus", label: "Chorus Depth" },
    { name: "part_dsp", label: "DSP Depth" }
  ]

h2 Part #{ch}
div.part_voice_selector(id='part-' + ch + '-voice-selector')
div.part_controls
  mixin control_inputs(controls)
    each control in controls
      - var control_id = `${control.name}_${ch}`
      div.part_row
        label(for=control_id)= control.label
        br
        input.part_control(
          type='range'
          name=control.name
          id=control_id
          value=midiToDom[part_values[control.name]]
        )
  div
    div.part_mix_controls
      +control_inputs(part_mix_controls)
  div
    div.part_tone_controls
      +control_inputs(part_tone_controls)
  div
    div.part_fx_controls
      +control_inputs(part_fx_controls)
div
  div.part_note_mode_options
    div
      input(type='checkbox' id='part-' + ch + '-recv-keys')
      label(for='part-' + ch + '-recv-keys') Receive Keyboard Notes
      br
      input(type='checkbox' id='part-' + ch + '-recv-midi' disabled)
      label(for='part-' + ch + '-recv-midi') Receive Midi Notes
    div
      label(for='part-' + ch + '-note-mode') Part #{ch} Note Mode
      br
      select(id='part-' + ch + '-note-mode')
        option(value="none") None
        option(value="note") Note
        option(value="chord") Chord
div.part_note_mode(id='part-' + ch + '-note-mode-none')
  p asdf
div.part_note_mode(id='part-' + ch + '-note-mode-note' class='part_' + ch + '_note_mode')
  h3 Note Mode: Note
  label(for='part-' + ch + '-note-oct') Octave 
    span(id='part-' + ch + '-note-oct-data') []
  br
  input(type='range' id='part-' + ch + '-note-oct')
  br
  label(for='part-' + ch + '-note-semi') Semitone 
    span(id='part-' + ch + '-note-semi-data') []
  br
  input(type='range' id='part-' + ch + '-note-semi')
div.part_note_mode(id='part-' + ch + '-note-mode-chord')
  h3 Note Mode: Chord
  div.part_note_mode_chord_controls
    div
      label(for='part-' + ch + '-chord-preset') Chord
      br
      select(id='part-' + ch + '-chord-preset')
        option(value="none") 
    div
      label Inversion
      br
      button(id='part-' + ch + '-chord-inv-down') <<
      button(id='part-' + ch + '-chord-inv-up') >>
    div
      label Spread
      br
      button(id='part-' + ch + '-chord-spread-down') <<
      button(id='part-' + ch + '-chord-spread-out') < >
      button(id='part-' + ch + '-chord-spread-up') >>
    - var c = 0
    while c < 6
      div
        input(type='checkbox' id='part-' + ch + '-chord-' + c + '-active')
        label(for='part-' + ch + '-chord-' + c + '-active') Note #{c} Active
        br
        label(for='part-' + ch + '-chord-' + c + '-oct') Octave 
          span(id='part-' + ch + '-chord-' + c + '-oct-data') []
        br
        input(type='range' id='part-' + ch + '-chord-' + c + '-oct')
        br
        label(for='part-' + ch + '-chord-' + c + '-semi') Semitone 
          span(id='part-' + ch + '-chord-' + c + '-semi-data') []
        br
        input(type='range' id='part-' + ch + '-chord-' + c + '-semi')
      - c++
